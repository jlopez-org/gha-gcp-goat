on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
name: GKE - Build, Scan and Deploy

jobs:
  deploy:
    name: GKE - Build, Scan and Deploy
    runs-on: ubuntu-latest
    
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - id: auth
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        token_format : access_token
        credentials_json: ${{ secrets.GKE_SA_KEY }}
        access_token_lifetime: 300s
       
    - name: 'Set up Google Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0'
      with:
        project_id: ${{ secrets.GKE_PROJECT }} 
    #- name: Get docker GCR credentials
      # run: |-
      #   gcloud --quiet auth configure-docker gcr.io
    
    # Get the GKE credentials so we can deploy to the cluster
    - name : 'Get GKE credentials'
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ secrets.GKE_CLUSTER }}
        location: ${{ secrets.GKE_ZONE }}
        
    # Build the Docker image
    - name: Build
      run: |-
        docker build --tag "us-east1-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/${{ secrets.IMAGE }}:${{ github.sha }}" .
        
    # Code Security Scan
    - name: Prisma Cloud image scan
      id: scan
      uses: PaloAltoNetworks/prisma-cloud-scan@v1
      with:
        pcc_console_url: ${{ secrets.PCC_CONSOLE_URL }}
        pcc_user: ${{ secrets.PCC_USER }}
        pcc_pass: ${{ secrets.PCC_PASS }}
        image_name: us-east1-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/${{ secrets.IMAGE }}:${{ github.sha }}  

    # GCP Artifactory Registry Login
    - name: Login to Artifact Registry
      uses: docker/login-action@v1
      with:
        registry: us-east1-docker.pkg.dev
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}
        
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "us-east1-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/${{ secrets.IMAGE }}:${{ github.sha }}" 
        
    # Container Deployment
    - name: Update deploy image to GKE
      run: |-
        kustomize create --resources gke-deployment.yml
        kustomize edit set image "demo-image-name=us-east1-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/${{ secrets.IMAGE }}:${{ github.sha }}"
        cat kustomization.yaml
        kustomize build . | kubectl apply -f -
        kubectl get pods -o wide
